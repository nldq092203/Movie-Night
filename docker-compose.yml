services:
  # Django Backend
  web:
    build:
      context: .  
      dockerfile: Dockerfile  
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app        
    env_file:
      - ./.env
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_DB}
    ports:
      - "8000:8000"
    depends_on:
      - redis

  # Redis
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  # Celery Worker
  celery:
    build:
      context: .      
      dockerfile: Dockerfile
    command: >
      sh -c "
      celery -A movienight worker --loglevel=INFO"
    volumes:
      - .:/app     
    env_file:
      - ./.env
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_DB}
    depends_on:
      - web
      - redis

  # Celery Beat
  celery-beat:
    build:
      context: .      
      dockerfile: Dockerfile
    command: >
      sh -c "
      celery -A movienight beat --loglevel=INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app       
    env_file:
      - ./.env
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_DB}
    depends_on:
      - web
      - redis
